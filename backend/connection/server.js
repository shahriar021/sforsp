const express = require('express');
const mysql = require('mysql2');
const cors = require('cors');
const connection = require('./config/database');
const users_model = require('../model/Admin/user_model/user_model');
const mobile_allowance_model = require('../model/Admin/mobile_allowance_model/mobile_allowance_model');
const mobile_allowance = require('../model/Admin/mobile_allowance_model/mobile_allowance_model');
const transport_allowance = require('../model/Admin/transport_allowance_model/transport_allowance_model');
const transport_allowance_model = require('../model/Admin/transport_allowance_model/transport_allowance_model');
const office_visit = require('../model/Admin/office_visit_model/office_visit_model');
const geo_location = require('../model/Admin/geo_location_model/geo_location_model');
const attendance = require('../model/Admin/attendance_model/attendance_model');
const path = require('path');

const app = express();

app.use(express.json());

app.use(cors());

app.get('/', (req, res) => {
  res.send('Server is running for Shahriar....');
});

app.get('/all_users', users_model.usersListAll);

app.get('/specifi_user/:id', users_model.usersListAllForSpecific);

app.post('/login_user', users_model.loginUserEmailPassword);

app.post('/user_token/:id', users_model.userToken);

app.post('/change_password/:id', users_model.changePassword);

app.post('/update_profile/:id', users_model.userProfileUpdate);

var fs = require('fs');
var multer = require('multer');
const dashboard_model = require('../model/Admin/dashboard_model/dashboard_model');
const salary = require('../model/Admin/salary_model/salary_model');
const report = require('../model/Admin/attendance_model/report');
const leave = require('../model/Admin/leave_application/leave_application');
// var upload = multer({dest: 'uploads/'});

const storage = multer.diskStorage({
  destination: function (req, file, cb) {
    cb(null, 'uploads/');
  },
  filename: function (req, file, cb) {
    cb(null, file.originalname);
  },
});

const upload = multer({storage: storage});

//setting the default folder for multer
//other imports and code will go here
// app.post('/upload', upload.single('fileData'), (req, res, next) => {
//   console.log(req.file); //this will be automatically set by multer
//   console.log(req.body);
//   //below code will read the data from the upload folder. Multer     will automatically upload the file in that folder with an  autogenerated name
//   fs.readFile(req.file.path, (err, contents) => {
//     if (err) {
//       console.log('Error: ', err);
//     } else {
//       console.log('File contents ', contents);
//       res.status(200).send(contents);
//     }
//   });
// });

app.post('/upload/:id', upload.single('originalname'), (req, res) => {
  if (!req.file) {
    return res.status(400).send('No file uploaded.');
  }

  console.log(req.file);
  console.log(req.params);
  console.log(req.body);

  const {originalname} = req.file;
  const {id: userId} = req.params;

  const query = 'UPDATE users SET photo = ? WHERE id = ?';
  connection.query(query, [originalname, userId], (err, results) => {
    if (err) {
      console.error('Error inserting into the database:', err);
      return res.status(500).send('Error inserting into the database.');
    }

    console.log('File name inserted into database:', results);

    if (results.affectedRows === 1) {
      res.send('File uploaded and database updated successfully.');
    } else {
      res.status(404).send('User ID not found or no rows updated.');
    }
  });
});
app.get('/uploads/:file', (req, res) => {
  const {file} = req.params;
  const imageFilePath = path.join(__dirname, `/uploads/${file}`);

  // Check if the image file exists
  if (fs.existsSync(imageFilePath)) {
    res.sendFile(imageFilePath);
  } else {
    res.status(404).json({error: 'Image file not found'});
  }
});
// ---------------------------------------end of users --------------------------------

app.get(
  '/mobile_allowance/mobile_allowance_list',
  mobile_allowance.mobile_allowance_list,
);

app.post(
  '/mobile_allowance/mobile_allowance_create',
  mobile_allowance.mobile_allowance_create,
);

app.post(
  '/mobile_allowance/mobile_allowance_delete/:id',
  mobile_allowance.mobile_allowance_delete,
);

// -----------------------------------------end of mobile_allowance--------------------------------

app.get(
  '/transport_allowance/transport_allowance_list',
  transport_allowance.transport_allowance_list,
);

app.post(
  '/transport_allowance/transport_allowance_create',
  transport_allowance.transport_allowance_create,
);

app.post(
  '/transport_allowance/transport_allowance_delete/:id',
  transport_allowance.transport_allowance_delete,
);

app.post(
  '/transport_allowance/transport_allowance_edit/:id',
  transport_allowance.transport_allowance_edit,
);

// -----------------------------end of transport allowance-------------------

app.get('/office_visit/office_visit_list', office_visit.office_visit_list);

app.post(
  '/office_visit/office_visit_delete/:id',
  office_visit.office_visit_delete,
);

app.post(
  '/office_visit/offce_visit_all_create',
  office_visit.offce_visit_all_create,
);

app.post(
  '/office_visit/office_visit_remarks_create',
  office_visit.office_visit_remarks_create,
);

app.get(
  '/office_visit/office_visit_remarks_list/:id',
  office_visit.office_visit_remarks_list,
);

app.get(
  '/office_visit/office_visit_person/:id',
  office_visit.office_visit_person,
);

app.post(
  '/office_visit/office_visit_person_create',
  office_visit.office_visit_person_create,
);

// -----------------------------------end of office visit ----------------------------

app.post('/geo_location/geo_location_create', geo_location.geo_location_create);

app.get('/geo_location/geo_location_list', geo_location.geo_location_list);

app.get(
  '/geo_location/geo_location_marker_list/:id',
  geo_location.geo_location_marker_list,
);

app.get(
  '/geo_location/geo_location_marker_live_list/:id',
  geo_location.geo_location_marker_live_list,
);

app.post(
  '/geo_location/employee_location_search',
  geo_location.employee_location_search,
);

// -------------------------------------end of geo location -----------------------------

app.get('/dashboard/weekly_allowance/:id', dashboard_model.weeklyAllowance);

// ----------------------------------------end of weekly allowance -----------------------------

app.get('/salary/getSalary/:id', salary.get_salary);

// ----------------------------------------end of salary -----------------------------

app.get('/attendance/attedance_list/:id', attendance.attendance_list);
app.post(
  '/attendance/attedance_list_date_for_search_box/:id',
  attendance.attendance_list_date_for_search_box,
);

app.get(
  '/attendance/attedance_list_daily/:id',
  attendance.attendance_list_daily,
);

app.post(
  '/attendance/attedance_list_monthly/:id',
  attendance.attendance_list_monthly,
);

app.post(
  '/attendance/attendance_list_summary/:id',
  attendance.attendance_list_summary,
);

app.post(
  '/attendance/attendance_list_multiple_month/:id',
  report.attedance_multiple_month_report,
);

// ---------------------------------------------------end of attedance -----------------------

app.post('/leave/leave_create/:id', leave.leave_create);

app.get('/leave/get_leave_cat', leave.get_leave_cat);
app.get('/leave/get_leave_employee', leave.get_receiver);
app.get('/leave/get_leave_list', leave.get_receiver_list);

const PORT = 5000;
app.listen(PORT, () => {
  console.log('Server is running at port ' + PORT);
});

module.exports = connection;
